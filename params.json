{"name":"obligate","tagline":"predicate constraints for design by contract","body":"# Synopsis\r\n\r\n**obligate** is a library for defining obligations for functions to adhere to.\r\n\r\n[![Build Status](https://travis-ci.org/pluma/obligate.png?branch=master)](https://travis-ci.org/pluma/obligate) [![Coverage Status](https://coveralls.io/repos/pluma/obligate/badge.png?branch=master)](https://coveralls.io/r/pluma/obligate?branch=master) [![NPM version](https://badge.fury.io/js/obligate.png)](http://badge.fury.io/js/obligate) [![Dependencies](https://david-dm.org/pluma/obligate.png)](https://david-dm.org/pluma/obligate)\r\n\r\n# Features\r\n\r\n## Transparent\r\n\r\nIf an obligation is met, it returns its input. If it is not, it throws an `ObligationError`. This allows you to just inject obligations into your control flow and mimic pre-conditions and post-conditions, e.g. using promises:\r\n\r\n```javascript\r\nfetchSomeData()\r\n.then(obligate(somePredicate, 'Predicate returned false!'))\r\n.then(doMoreStuff, handleError);\r\n```\r\n\r\n## Extensible\r\n\r\n`obligate` doesn't care where you get your predicates from. You can pass it any function that returns `true` or `false` when passed input by the obligation.\r\n\r\nIf you just want to get started, try [pred](https://github.com/pluma/pred) for the most common checks.\r\n\r\n## Error handling\r\n\r\nThe `ObligationError` thrown by failed obligations is an actual error type, so stack traces and `instanceof` checks will behave as expected.\r\n\r\n# Install\r\n\r\n## With NPM\r\n\r\n```sh\r\nnpm install obligate\r\n```\r\n\r\n## From source\r\n\r\n```sh\r\ngit clone https://github.com/pluma/obligate.git\r\ncd obligate\r\nnpm install\r\nmake test\r\n```\r\n\r\n# API\r\n\r\n## obligate(predicate:Function, message:String):Function\r\n\r\nCreates an `obligation` function that returns its input if the given `predicate` returns `true` when passed the input or throws an `ObligationError` with the given `message` if the predicate returns `false`.\r\n\r\n## new ObligationError(message)\r\n\r\nCreates a new `ObligationError` instance with the given `message`. The `new` keyword is optional. You probably don't want to use this constructor directly.\r\n\r\n# Unlicense\r\n\r\nThis is free and unencumbered public domain software. For more information, see http://unlicense.org/ or the accompanying [UNLICENSE](https://github.com/pluma/obligate/blob/master/UNLICENSE) file.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}